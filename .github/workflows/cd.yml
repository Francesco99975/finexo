name: CD

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y age tar

      - name: Download sops
        run: |
          SOPS_VERSION=3.8.3
          curl -sSL "https://github.com/mozilla/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.linux.amd64" \
            -o sops
          chmod +x sops
          sudo mv sops /usr/local/bin/sops

      - name: Restore AGE private key
        env:
          AGE_PRIVATE_KEY: ${{ secrets.AGE_PRIVATE_KEY }}
        run: |
          echo "$AGE_PRIVATE_KEY" > age-key.txt
          chmod 600 age-key.txt

      - name: Decrypt seeds bundle
        run: |
          sops --decrypt \
               --age-key-file age-key.txt \
               --output seeds.tar.gz \
               seeds.tar.gz.enc

      - name: Unpack seeds
        run: |
          tar xzf seeds.tar.gz
          rm seeds.tar.gz

      # Create the .prod.env file from GitHub secrets
      - name: Create production environment file
        run: |
          echo "GO_ENV=${{ secrets.GO_ENV }}" > .prod.env
          echo "PORT=${{ secrets.PORT }}" >> .prod.env
          echo "HOST=${{ secrets.HOST }}" >> .prod.env
          echo "DSN=${{ secrets.DSN }}" >> .prod.env

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.4'
          cache: true

      - name: Build Docker image
        run: make build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: finexo-image
          path: finexo.tar
          retention-days: 7

      - name: Upload docker-compose file
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose
          path: docker-compose.yml
          retention-days: 7

  deploy-production:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: production
      url: https://finexo.urx.ink
    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: finexo-image

      - name: Download docker-compose
        uses: actions/download-artifact@v4
        with:
          name: docker-compose

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan urx.ink >> ~/.ssh/known_hosts

      - name: Deploy to production
        run: |
          # Transfer files to production server
          scp finexo.tar docker-compose.yml kalairen@urx.ink:~/apps/finexo/

          # SSH into server and deploy
          ssh kalairen@urx.ink << 'EOF'
            cd ~/apps/finexo
            mkdir seeds
            touch seeds/discovered.csv
            docker load < finexo.tar
            docker compose up -d
            docker system prune -f
          EOF

      - name: Verify deployment
        run: |
          # Give the service some time to start
          sleep 10
          curl -sSf https://finexo.urx.ink/healthcheck || exit 1
